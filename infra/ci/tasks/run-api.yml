---
platform: linux

inputs:
  - name: git-repo

image_resources:
  type: docker-image
  source:
    repository: hashicorp/terraform

  params: 
    AWS_ACCESS_KEY_ID:
    AWS_SECRET_ACCESS_KEY:


run:
  path: sh
  args: 
    - -c
    - |
    set -euo pipefail
    set -x
    apk add curl
    curl -Lo /usr/local/bin/ecs-cli https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest
    chmod +x /usr/local/bin/ecs-cli

    aws iam --region eu-central-1 create-role --role-name ecsTaskExecutionRole --assume-role-policy-document file://task-execution-assume-role.json
    aws iam --region eu-central-1 attach-role-policy --role-name ecsTaskExecutionRole --policy-arn arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
    ecs-cli configure --cluster gevorg-api --default-launch-type FARGATE --config-name gevorg-api --region eu-central-1
    ecs-cli configure profile --access-key $AWS_ACCESS_KEY_ID --secret-key $AWS_SECRET_ACCESS_KEY --profile-name gevorg-api-profile
    ecs-cli up --cluster-config gevorg-api --ecs-profile gevorg-api-profile
    aws ec2 describe-security-groups --filters Name=vpc-id,Values=VPC_ID --region eu-central-1
    id=$(aws ec2 describe-security-groups --filters Name=vpc-id,Values=vpc-049a1eaa6ffc34ffc --region eu-central-1 --query 'SecurityGroups[*].[GroupId]' --output text)

    aws ec2 authorize-security-group-ingress --group-id $id --protocol tcp --port 5000 --cidr 0.0.0.0/0 --region eu-central-1
    ecs-cli compose --project-name gevorg-api service up --create-log-groups --cluster-config gevorg-api --ecs-profile gevorg-api-profile
    ecs-cli compose --project-name gevorg-api service ps --cluster-config gevorg-api --ecs-profile gevorg-api-profile



VPC created: vpc-049a1eaa6ffc34ffc
Subnet created: subnet-06e4f3d5605f19ae0
Subnet created: subnet-0ee18dd60699495d2